<Window x:Class="PictureViewer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PictureViewer"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="Levi Viewer" Height="900" Width="1200"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"        
        x:Name="_this"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}" Loaded="Window_Loaded" SizeChanged="Window_SizeChanged" Activated="_this_Activated" Closing="_this_Closing">
    <Window.Resources>
        <local:PathToNameConverter x:Key="pathToNameConverter"></local:PathToNameConverter>

        <Style x:Key="SelectableFolderStyle" TargetType="{x:Type TreeViewItem}">
            <EventSetter Event="Selected" Handler="folder_Selected"></EventSetter>
            <Setter Property="Tag" Value="{Binding}"></Setter>
            <Setter Property="HeaderTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <Viewbox Width="15" Height="15">
                                <Canvas Width="24" Height="24">
                                    <Path Data="M20,18H4V8H20M20,6H12L10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6Z" Fill="White" />
                                </Canvas>
                            </Viewbox>
                            <TextBlock Text="{Binding Converter={StaticResource pathToNameConverter}}"  Foreground="White"  Margin="5,0" />
                        </StackPanel>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Storyboard x:Key="story_main_layout" >
            <DoubleAnimation Storyboard.TargetProperty="Width" 
                             Storyboard.TargetName="Col1_Header"
                             From="{Binding ElementName=Col1_Header, Path=ActualWidth}"
                             To="{Binding Path=Width_Col1}"
                             Duration="0:0:0.3"
                             >
                <DoubleAnimation.EasingFunction>
                    <CubicEase EasingMode="EaseIn"></CubicEase>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetProperty="Width" 
                             Storyboard.TargetName="Col2_Header"
                             From="{Binding ElementName=Col2_Header, Path=ActualWidth}"
                             To="{Binding Path=Width_Col2}"
                             Duration="0:0:0.3"
                             >
                <DoubleAnimation.EasingFunction>
                    <CubicEase EasingMode="EaseIn"></CubicEase>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetProperty="Width" 
                             Storyboard.TargetName="scroll_setting"
                             From="{Binding ElementName=scroll_setting, Path=ActualWidth}"
                             To="{Binding Path=WidthTopPanel}"
                             Duration="0:0:0.2"
                             >
                <DoubleAnimation.EasingFunction>
                    <CubicEase EasingMode="EaseOut"></CubicEase>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetProperty="Height" 
                             Storyboard.TargetName="scroll_setting"
                             From="{Binding ElementName=scroll_setting, Path=ActualHeight}"
                             To="{Binding Path=HeightTopPanel}"
                             Duration="0:0:0.4"
                             >
                <DoubleAnimation.EasingFunction>
                    <CubicEase EasingMode="EaseIn"></CubicEase>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetProperty="Width" 
                             Storyboard.TargetName="scroll_directories"
                             From="{Binding ElementName=scroll_directories, Path=ActualWidth}"
                             To="{Binding Path=Width_Col1}"
                             Duration="0:0:0.3"
                             >
                <DoubleAnimation.EasingFunction>
                    <CubicEase EasingMode="EaseIn"></CubicEase>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetProperty="Width" 
                             Storyboard.TargetName="scroll_favorites"
                             From="{Binding ElementName=scroll_favorites, Path=ActualWidth}"
                             To="{Binding Path=Width_Col1}"
                             Duration="0:0:0.3"
                             >
                <DoubleAnimation.EasingFunction>
                    <CubicEase EasingMode="EaseIn"></CubicEase>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetProperty="Width" 
                             Storyboard.TargetName="scroll_images"
                             From="{Binding ElementName=scroll_images, Path=ActualWidth}"
                             To="{Binding Path=Width_Col2}"
                             Duration="0:0:0.3"
                             >
                <DoubleAnimation.EasingFunction>
                    <CubicEase EasingMode="EaseIn"></CubicEase>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>

            <DoubleAnimation Storyboard.TargetProperty="Width" 
                             Storyboard.TargetName="border_image"
                             From="{Binding ElementName=border_image, Path=ActualWidth}"
                             Duration="0:0:0.3"
                             To="{Binding Path=Width_Col3}"
                             
                             >
                <DoubleAnimation.EasingFunction>
                    <CubicEase EasingMode="EaseIn"></CubicEase>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>
        <Storyboard x:Key="eff_thumbnail_click">
            <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" From="1" To="0.7" Duration="0:0:0.08">
                <DoubleAnimation.EasingFunction>
                    <SineEase EasingMode="EaseIn"></SineEase>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" From="0.7" To="1" Duration="0:0:0.08">
                <DoubleAnimation.EasingFunction>
                    <SineEase EasingMode="EaseOut"></SineEase>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>

        </Storyboard>
        <DataTemplate x:Key="imageItemShowingTemplate">
            <Border BorderBrush="DarkCyan" BorderThickness="1">
                <Image   Source="{Binding CurrentImage}" Tag="{Binding CurrentFile}" MouseUp="Image_MouseUp" 
                                     Width="{Binding ElementName=_this, Path=ThumbnailsWidth}" 
                                     Height="{Binding ElementName=_this, Path=ThumbnailsHeight}" Stretch="Uniform" Margin="10">
                    <Image.Triggers>
                        <EventTrigger RoutedEvent="Image.MouseUp">
                            <BeginStoryboard x:Name="eff_thumbnail_click_BeginStoryboard" Storyboard="{StaticResource eff_thumbnail_click}"></BeginStoryboard>
                        </EventTrigger>
                    </Image.Triggers>
                </Image>
            </Border>
        </DataTemplate>
        <DataTemplate x:Key="imageItemTrainingTemplate">
            <Border BorderBrush="DarkCyan" BorderThickness="1">
                <StackPanel>

                    <Grid Width="{Binding ElementName=_this, Path=ThumbnailsWidth}" 
                                     Height="{Binding ElementName=_this, Path=ThumbnailsWidth}">
                        <Grid.RowDefinitions>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                            <RowDefinition Height="40"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition></ColumnDefinition>
                            <ColumnDefinition></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Button HorizontalAlignment="Right" VerticalAlignment="Top" Background="DarkRed" Content="X"
                                Grid.Column="1" Grid.Row="0" Click="BtnSkip_Click" Tag="{Binding}"></Button>
                        <Image   Source="{Binding FullImage.CurrentImage}"  Panel.ZIndex="2" 
                                 Grid.ColumnSpan="2" Grid.RowSpan="2" Grid.Column="0" Grid.Row="0"
                                     Width="{Binding ElementName=_this, Path=ThumbnailsWidth}" 
                                     Height="{Binding ElementName=_this, Path=ThumbnailsHeight}" Stretch="Uniform">
                        </Image>
                        <Border Grid.Column="1" Grid.Row="1" Width="100" Height="100" BorderBrush="Khaki" BorderThickness="1"  Panel.ZIndex="4" >
                            <Image   Source="{Binding Face.CurrentImage}"
                                 Stretch="Uniform">
                            </Image>
                        </Border>

                        <Label Content="{Binding StrDistance}" DockPanel.Dock="Top" Foreground="Wheat"
                               Grid.Column="0" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Bottom"></Label>
                        <DockPanel Grid.ColumnSpan="2" Grid.Row="2" Grid.Column="0" HorizontalAlignment="Stretch">
                            <Button Content="Save" DockPanel.Dock="Right" Click="BtnSave_Click" Tag="{Binding}"></Button>
                            <TextBox Text="{Binding Label, Mode=OneTime}" Foreground="White"
                                 FontSize="14" TextAlignment="Center" Margin="5" BorderBrush="DarkKhaki" 
                                 BorderThickness="1">
                            </TextBox>
                        </DockPanel>
                    </Grid>

                </StackPanel>
            </Border>

        </DataTemplate>
        <local:ImageListTemplateSelector x:Key="imageListTemplateSelector" ShowingTemplate="{StaticResource imageItemShowingTemplate}"
                                         TrainingTemplate="{StaticResource imageItemTrainingTemplate}"></local:ImageListTemplateSelector>
        <Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
            <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="0,1,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <ControlTemplate.Resources>
                            <SineEase x:Key="RippleEasingFunction" EasingMode="EaseInOut"/>
                            <Storyboard x:Key="HideRipple">
                                <DoubleAnimation Duration="0:0:0.3" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="RippleThumb">
                                    <DoubleAnimation.EasingFunction>
                                        <SineEase EasingMode="EaseInOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                            <Storyboard x:Key="ShowRipple">
                                <DoubleAnimation Duration="0" To="0.26" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="RippleThumb">
                                    <DoubleAnimation.EasingFunction>
                                        <SineEase EasingMode="EaseInOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Duration="0:0:0.2" From="1" To="2.5" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="RippleThumb">
                                    <DoubleAnimation.EasingFunction>
                                        <SineEase EasingMode="EaseInOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Duration="0:0:0.2" From="1" To="2.5" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="RippleThumb">
                                    <DoubleAnimation.EasingFunction>
                                        <SineEase EasingMode="EaseInOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Viewbox Width="34">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="*" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="Checked">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ThumbHolder">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="23.5">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <QuadraticEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition From="Checked" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="Unchecked">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ThumbHolder">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="23.5"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <QuadraticEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="23.5" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ThumbHolder"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ThumbHolder"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid>
                                <Rectangle x:Name="Track" Fill="#FFFAFAFA" HorizontalAlignment="Left" Height="15" Margin="4.211,5,4.211,0" Opacity="0.6" RadiusY="7.5" RadiusX="7.5" Stroke="{x:Null}" VerticalAlignment="Top" Width="40"/>
                                <Grid x:Name="ThumbHolder" HorizontalAlignment="Left" VerticalAlignment="Top">
                                    <Grid.RenderTransform>
                                        <TranslateTransform X="0" Y="0"/>
                                    </Grid.RenderTransform>
                                    <Ellipse x:Name="RippleThumb" Fill="{DynamicResource PrimaryHueLightBrush}" HorizontalAlignment="Center" Height="25" IsHitTestVisible="False" Margin="0" Opacity="0.26" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Center" Width="25">
                                        <Ellipse.RenderTransform>
                                            <ScaleTransform ScaleY="1" ScaleX="1"/>
                                        </Ellipse.RenderTransform>
                                    </Ellipse>
                                    <AdornerDecorator CacheMode="{Binding (materialDesign:ShadowAssist.CacheMode), RelativeSource={RelativeSource Self}}">
                                        <Ellipse x:Name="Thumb" Effect="{DynamicResource MaterialDesignShadowDepth1}" Fill="#FFFAFAFA" HorizontalAlignment="Center" Height="25" Margin="0" RenderTransformOrigin="0.5,0.5" Stroke="{x:Null}" VerticalAlignment="Center" Width="25"/>
                                    </AdornerDecorator>
                                    <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" FlowDirection="LeftToRight" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Grid>
                            </Grid>
                        </Viewbox>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Fill" TargetName="Thumb" Value="Cyan"/>
                                <Setter Property="Fill" TargetName="Track" Value="LightCyan"/>
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="True"/>
                                    <Condition Property="materialDesign:ToggleButtonAssist.HasOnContent" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Content" TargetName="ContentPresenter" Value="{Binding (materialDesign:ToggleButtonAssist.OnContent), RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Setter Property="ContentTemplate" TargetName="ContentPresenter" Value="{Binding (materialDesign:ToggleButtonAssist.OnContentTemplate), RelativeSource={RelativeSource TemplatedParent}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
                            </Trigger>
                            <Trigger Property="Button.IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0.26" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="RippleThumb">
                                                <DoubleAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseInOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Duration="0:0:0.2" From="1" To="2.5" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="RippleThumb">
                                                <DoubleAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseInOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Duration="0:0:0.2" From="1" To="2.5" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="RippleThumb">
                                                <DoubleAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseInOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.3" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="RippleThumb">
                                                <DoubleAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseInOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Fill" TargetName="Thumb" Value="#FFBDBDBD"/>
                                <Setter Property="Fill" TargetName="Track">
                                    <Setter.Value>
                                        <SolidColorBrush Color="Black" Opacity="0.12"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded"/>
    </Window.Triggers>
    <Grid x:Name="grid_main" Background="DarkCyan" DataContext="{Binding ElementName=_this}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="40"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="35"></RowDefinition>
            <RowDefinition></RowDefinition>

        </Grid.RowDefinitions>
        
        
        <ScrollViewer x:Name="scroll_setting" Background="#15253a" Grid.Column="1" Grid.Row="0" Grid.ColumnSpan="3" Height="{Binding Path=HeightTopPanel}"
                      Width="{Binding Path=WidthTopPanel}" ClipToBounds="True">
            <StackPanel Orientation="Vertical" Margin="60" HorizontalAlignment="Left">
                <StackPanel Orientation="Horizontal">
                    <Label Foreground="White" FontSize="22" FontFamily="Calibri">Recognizer</Label>
                    <ToggleButton Margin="70 0 0 0" IsChecked="{Binding Source={x:Static local:Setting.Current}, Path=IsRecognitionEnabled}" Style="{DynamicResource ToggleButtonStyle1}">
                    </ToggleButton>
                </StackPanel>
                <Line X1="0" X2="400" Y1="20" Y2="20" StrokeThickness="2">
                    <Line.Stroke>
                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                            <GradientStop Color="FloralWhite" Offset="0"></GradientStop>
                            <GradientStop Color="Transparent" Offset="1"></GradientStop>

                        </LinearGradientBrush>
                    </Line.Stroke>
                </Line>
                <Label Foreground="White" FontSize="22" FontFamily="Calibri" Margin="0 10">About</Label>
                <Label Foreground="White" Margin="50 10" FontSize="16">LeviViewer</Label>
                <Label Foreground="White" Margin="50 10" FontSize="14">A program made with the pure purpose of learning.</Label>
                <Label Foreground="White" Margin="50 10" FontSize="14">Used framework and library: WPF 4.0, MaterialDesignThemesWPF 2.4, EmguCV 3.4</Label>
            </StackPanel>
        </ScrollViewer>
        
        
        <StackPanel Background="DarkCyan" Width="40" HorizontalAlignment="Left" Panel.ZIndex="-1" Grid.Column="0" Grid.Row="0" Grid.RowSpan="3">
            <Button x:Name="btn_folder" BorderThickness="0" Background="Transparent" Width="40" Height="40" Padding="0" Click="btn_folder_Click">
                <Canvas Width="24" Height="24">
                    <Path Data="M19,20H4C2.89,20 2,19.1 2,18V6C2,4.89 2.89,4 4,4H10L12,6H19A2,2 0 0,1 21,8H21L4,8V18L6.14,10H23.21L20.93,18.5C20.7,19.37 19.92,20 19,20Z" Fill="White" />
                </Canvas>
            </Button>
            <Button x:Name="btn_favorite" BorderThickness="0" Background="Transparent" Width="40" Height="40" Padding="0" Click="btn_favorite_Click">
                <Canvas Width="24" Height="24">
                    <Path Data="M12.1,18.55L12,18.65L11.89,18.55C7.14,14.24 4,11.39 4,8.5C4,6.5 5.5,5 7.5,5C9.04,5 10.54,6 11.07,7.36H12.93C13.46,6 14.96,5 16.5,5C18.5,5 20,6.5 20,8.5C20,11.39 16.86,14.24 12.1,18.55M16.5,3C14.76,3 13.09,3.81 12,5.08C10.91,3.81 9.24,3 7.5,3C4.42,3 2,5.41 2,8.5C2,12.27 5.4,15.36 10.55,20.03L12,21.35L13.45,20.03C18.6,15.36 22,12.27 22,8.5C22,5.41 19.58,3 16.5,3Z" Fill="White" />
                </Canvas>
            </Button>
            <!--Not implemented-->
            <!--Button BorderThickness="0" Background="Transparent" Width="40" Height="40" Padding="0">
                <Canvas Width="24" Height="24">
                    <Path Data="M5,4A2,2 0 0,0 3,6V16.29L11.18,8.11C11.06,7.59 11,7.07 11,6.53C11,5.62 11.2,4.76 11.59,4H5M18,21A2,2 0 0,0 20,19V11.86C19.24,13 18.31,14.21 17.29,15.5L16.5,16.5L15.72,15.5C14.39,13.85 13.22,12.32 12.39,10.91C12.05,10.33 11.76,9.76 11.53,9.18L7.46,13.25L15.21,21H18M3,19A2,2 0 0,0 5,21H13.79L6.75,13.96L3,17.71V19M16.5,15C19.11,11.63 21,9.1 21,6.57C21,4.05 19,2 16.5,2C14,2 12,4.05 12,6.57C12,9.1 13.87,11.63 16.5,15M18.5,6.5A2,2 0 0,1 16.5,8.5A2,2 0 0,1 14.5,6.5A2,2 0 0,1 16.5,4.5A2,2 0 0,1 18.5,6.5Z" Fill="White" />
                </Canvas>
            </-->
            <Button x:Name="btn_setting" BorderThickness="0" Background="Transparent" Width="40" Height="40" Padding="0" Click="btn_setting_Click">
                <Canvas Width="24" Height="24">
                    <Path Data="M12,15.5A3.5,3.5 0 0,1 8.5,12A3.5,3.5 0 0,1 12,8.5A3.5,3.5 0 0,1 15.5,12A3.5,3.5 0 0,1 12,15.5M19.43,12.97C19.47,12.65 19.5,12.33 19.5,12C19.5,11.67 19.47,11.34 19.43,11L21.54,9.37C21.73,9.22 21.78,8.95 21.66,8.73L19.66,5.27C19.54,5.05 19.27,4.96 19.05,5.05L16.56,6.05C16.04,5.66 15.5,5.32 14.87,5.07L14.5,2.42C14.46,2.18 14.25,2 14,2H10C9.75,2 9.54,2.18 9.5,2.42L9.13,5.07C8.5,5.32 7.96,5.66 7.44,6.05L4.95,5.05C4.73,4.96 4.46,5.05 4.34,5.27L2.34,8.73C2.21,8.95 2.27,9.22 2.46,9.37L4.57,11C4.53,11.34 4.5,11.67 4.5,12C4.5,12.33 4.53,12.65 4.57,12.97L2.46,14.63C2.27,14.78 2.21,15.05 2.34,15.27L4.34,18.73C4.46,18.95 4.73,19.03 4.95,18.95L7.44,17.94C7.96,18.34 8.5,18.68 9.13,18.93L9.5,21.58C9.54,21.82 9.75,22 10,22H14C14.25,22 14.46,21.82 14.5,21.58L14.87,18.93C15.5,18.67 16.04,18.34 16.56,17.94L19.05,18.95C19.27,19.03 19.54,18.95 19.66,18.73L21.66,15.27C21.78,15.05 21.73,14.78 21.54,14.63L19.43,12.97Z" Fill="White" />
                </Canvas>
            </Button>
        </StackPanel>
        <ScrollViewer x:Name="scroll_favorites" Width="{Binding Path=Width_Col1}" Margin="0 0 5 0" Padding="0 15 0 0" Grid.Column="1" Grid.Row="2"
                   Background="Black" Panel.ZIndex="-2"
                      VerticalScrollBarVisibility="Auto"
                      HorizontalScrollBarVisibility="Auto"
                      Visibility="Hidden"
                      >
            <TreeView x:Name="treev_favorites" ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                      ScrollViewer.VerticalScrollBarVisibility="Hidden" ScrollViewer.CanContentScroll="False">
                <TreeView.Resources>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="HeaderTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Viewbox Width="15" Height="15">
                                            <Canvas Width="24" Height="24">
                                                <Path Data="M22,4A2,2 0 0,1 24,6V16A2,2 0 0,1 22,18H6A2,2 0 0,1 4,16V4A2,2 0 0,1 6,2H12L14,4H22M2,6V20H20V22H2A2,2 0 0,1 0,20V11H0V6H2M6,6V16H22V6H6Z" Fill="White" />
                                            </Canvas>
                                        </Viewbox>
                                        <TextBlock Text="{Binding}" Foreground="White" Margin="5,0" />
                                    </StackPanel>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Resources>
                            <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource SelectableFolderStyle}">
                            </Style>
                        </Style.Resources>
                    </Style>
                </TreeView.Resources>

                <TreeViewItem x:Name="tvi_fav_folders" Header="Folders" ItemsSource="{Binding FavoriteFolders}">
                </TreeViewItem>

                <TreeViewItem x:Name="tvi_fav_people" Header="People" ItemsSource="{Binding People}" Tag="125987546187">

                </TreeViewItem>
                <!--Not implemented-->
                <!--TreeViewItem x:Name="tvi_fav_places" Header="Places">

                </-->


            </TreeView>
        </ScrollViewer>

        <ScrollViewer x:Name="scroll_directories" Width="{Binding Path=Width_Col1}" Margin="0 0 5 0" Padding="0 15 0 0" Grid.Column="1" Grid.Row="2"
                   Background="Black" Panel.ZIndex="-2"
                      VerticalScrollBarVisibility="Auto"
                      HorizontalScrollBarVisibility="Auto"
                     
                      >
            <TreeView x:Name="treev_directories" ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                      ScrollViewer.VerticalScrollBarVisibility="Hidden" ScrollViewer.CanContentScroll="False">
                <TreeView.Resources>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="HeaderTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Viewbox Width="15" Height="15">
                                            <Canvas Width="24" Height="24">
                                                <Path Data="M22,4A2,2 0 0,1 24,6V16A2,2 0 0,1 22,18H6A2,2 0 0,1 4,16V4A2,2 0 0,1 6,2H12L14,4H22M2,6V20H20V22H2A2,2 0 0,1 0,20V11H0V6H2M6,6V16H22V6H6Z" Fill="White" />
                                            </Canvas>
                                        </Viewbox>
                                        <TextBlock Text="{Binding}" Foreground="White" Margin="5,0" />
                                    </StackPanel>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Resources>
                            <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource SelectableFolderStyle}">
                            </Style>
                        </Style.Resources>

                    </Style>
                </TreeView.Resources>
            </TreeView>
        </ScrollViewer>

        <StackPanel Grid.Column="1" Grid.Row="1" Background="#1B3E3E" FlowDirection="RightToLeft" Orientation="Horizontal" ClipToBounds="True"
                    Width="{Binding Path=Width_Col1}" x:Name="Col1_Header" Margin="0 0 5 0">


        </StackPanel>

        <StackPanel Grid.Column="2" Grid.Row="1" Background="DarkSlateGray" FlowDirection="RightToLeft" Orientation="Horizontal"  ClipToBounds="True"
                    Width="{Binding Path=Width_Col2}" x:Name="Col2_Header">
            <Button x:Name="btn_Favorite" Width="30" Height="30" Foreground="{Binding Path=BtnFavoriteBg}" Click="btn_Favorite_Click_1" Style="{StaticResource MaterialDesignToolForegroundButton}" >
                <materialDesign:PackIcon Kind="Star" Height="24" Width="24"></materialDesign:PackIcon>

            </Button>

        </StackPanel>


        <ScrollViewer  x:Name="scroll_images" Grid.Row="2" Padding="0 15 0 0"
                   Width="{Binding Path=Width_Col2}" Background="Black" 
                   Margin="0 0 0 0" Grid.Column="2"
                       VerticalScrollBarVisibility="Auto"
                       
                   Panel.ZIndex="-3">
            <ItemsControl x:Name="icImages" ItemTemplateSelector="{StaticResource imageListTemplateSelector}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel x:Name="wrapp_images">

                        </WrapPanel>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </ScrollViewer>
        <Border x:Name="border_image" Width="{Binding Path=Width_Col3}" Background="Black" Panel.ZIndex="-4" Grid.Column="3" Grid.Row="2"
                HorizontalAlignment="Stretch">
            <Image x:Name="img_large" Source="{Binding CurrentImage}"/>
        </Border>

    </Grid>
</Window>
